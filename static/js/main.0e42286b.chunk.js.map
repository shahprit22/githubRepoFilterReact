{"version":3,"sources":["searchbox.jsx","repostiory.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","state","type","placeholder","onChange","this","props","handleSearch","Component","Repository","content","searchValue","contentfilter","e","filter","c","name","toLowerCase","startsWith","currentTarget","value","setState","url","userName","axios","get","then","response","data","error","catch","prevState","Fragment","map","id","App","user","handleChange","handleClick","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4QAUeA,E,4MARXC,MAAQ,G,4CACR,WACI,OACI,uBAAOC,KAAK,OAAOC,YAAY,YAAYC,SAAUC,KAAKC,MAAMC,mB,GAJpDC,aCoDTC,E,4MAhDXR,MAAQ,CACJS,QAAQ,GACRC,YAAY,GACZC,cAAc,I,EAkBlBL,aAAe,SAACM,GACZ,IAAKH,EAAW,EAAKT,MAAhBS,QACDE,EAAgBF,EAAQI,QAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,cAAcC,WAAWL,EAAEM,cAAcC,MAAMH,kBAC9F,EAAKI,SAAS,CAACT,gBAAeD,YAAYE,EAAEM,cAAcC,MAAMH,gBAAgB,WAChD,KAAzB,EAAKhB,MAAMU,aACN,EAAKU,SAAS,CAACT,cAAcF,Q,uDApB7C,WAAoB,IAAD,OACTY,EAAG,uCAAmCjB,KAAKC,MAAMiB,SAA9C,UACTC,IAAMC,IAAIH,GACTI,MAAK,SAAAC,GAAQ,OAAI,EAAKN,SAAS,CAACX,QAAUiB,EAASC,KAAMC,MAAM,KAAMjB,cAAgBe,EAASC,UAC9FE,OAAM,SAAAD,GAAK,OAAI,EAAKR,SAAS,CAACQ,e,gCAEnC,SAAmBE,GAAW,IAAD,OACzB,GAAGA,EAAUR,WAAWlB,KAAKC,MAAMiB,SAAS,CAC5C,IAAMD,EAAG,uCAAmCjB,KAAKC,MAAMiB,SAA9C,UACTC,IAAMC,IAAIH,GACTI,MAAK,SAAAC,GAAQ,OAAI,EAAKN,SAAS,CAACX,QAAUiB,EAASC,KAAMC,MAAO,KAAMjB,cAAce,EAASC,UAC7FE,OAAM,SAAAD,GAAK,OAAI,EAAKR,SAAS,CAACQ,gB,oBAanC,WACI,MAA8BxB,KAAKJ,MAA5B4B,EAAP,EAAOA,MAAMjB,EAAb,EAAaA,cACb,OACI,eAAC,IAAMoB,SAAP,WACI,0CAAa3B,KAAKC,MAAMiB,YACvBM,EAAQ,6DACT,qCACI,cAAC,EAAD,CAAWtB,aAAcF,KAAKE,eAC9B,6BACKK,EAAcqB,KAAI,SAAAlB,GAAC,OAAI,6BAAgBA,EAAEC,MAATD,EAAEmB,mB,GAxClC1B,aC6BV2B,E,4MA5BblC,MAAQ,CACNmC,KAAK,GACLb,SAAS,M,EAGXc,aAAe,SAACxB,GACd,EAAKQ,SAAS,CAACe,KAAMvB,EAAEM,cAAcC,S,EAGvCkB,YAAc,WACZ,IAAMf,EAA6B,KAAlB,EAAKtB,MAAMmC,KAAY,KAAO,EAAKnC,MAAMmC,KAC1D,EAAKf,SAAS,CAACE,c,4CAGjB,WACE,MAAyBlB,KAAKJ,MAAvBmC,EAAP,EAAOA,KAAMb,EAAb,EAAaA,SACb,OACE,gCACE,mDACA,gDACA,uBAAOrB,KAAK,OAAOkB,MAAOgB,EAAMhC,SAAUC,KAAKgC,eAC/C,wBAAQE,QAAWlC,KAAKiC,YAAxB,uBACCf,EAAW,cAAC,EAAD,CAAYA,SAAUA,IAAe,8D,GAxBvCf,aCSHgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.0e42286b.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nclass SearchBox extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <input type=\"text\" placeholder=\"...Search\" onChange={this.props.handleSearch}/>\r\n         );\r\n    }\r\n}\r\n \r\nexport default SearchBox;","import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport SearchBox from \"./searchbox\";\r\n\r\nclass Repository extends Component {\r\n    state = { \r\n        content:[],\r\n        searchValue:\"\",\r\n        contentfilter:[]\r\n     }\r\n\r\n    componentDidMount(){\r\n        const url = `https://api.github.com/users/${this.props.userName}/repos` \r\n        axios.get(url)\r\n        .then(response => this.setState({content : response.data, error:null, contentfilter : response.data}))\r\n        .catch(error => this.setState({error}))\r\n    }\r\n    componentDidUpdate(prevState){\r\n        if(prevState.userName!==this.props.userName){\r\n        const url = `https://api.github.com/users/${this.props.userName}/repos` \r\n        axios.get(url)\r\n        .then(response => this.setState({content : response.data, error: null, contentfilter:response.data}))\r\n        .catch(error => this.setState({error}))\r\n        }\r\n    }\r\n\r\n    handleSearch = (e) => {\r\n        var {content} = this.state\r\n        var contentfilter = content.filter(c => c.name.toLowerCase().startsWith(e.currentTarget.value.toLowerCase()))\r\n        this.setState({contentfilter, searchValue:e.currentTarget.value.toLowerCase()}, () => {\r\n            if(this.state.searchValue===\"\"){\r\n                    this.setState({contentfilter:content})\r\n            }\r\n        })\r\n    }\r\n    render() { \r\n        const {error,contentfilter} = this.state\r\n        return ( \r\n            <React.Fragment>\r\n                <h1>Welcome {this.props.userName}</h1>\r\n                {error ? <h1>Please enter valid username</h1> : \r\n                <>\r\n                    <SearchBox handleSearch={this.handleSearch}/>\r\n                    <ul>\r\n                        {contentfilter.map(c => <li key={c.id}>{c.name}</li>)}\r\n                    </ul>\r\n                </>\r\n                }\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Repository;","import React, { Component } from 'react';\nimport Repository from './repostiory';\n\nclass App extends Component {\n\n  state = { \n    user:\"\",\n    userName:null,\n   };\n\n  handleChange = (e) => {\n    this.setState({user: e.currentTarget.value})\n  }\n\n  handleClick = () => {\n    const userName = this.state.user===\"\" ? null : this.state.user\n    this.setState({userName})\n  }\n\n  render(){\n    const {user, userName} = this.state;\n    return (\n      <div>\n        <h1>Welcome to Github</h1>\n        <label>Username : </label>\n        <input type=\"text\" value={user} onChange={this.handleChange} />\n        <button onClick = {this.handleClick}>Find Repo</button>\n        {userName ? <Repository userName={userName} /> : <h1>Please Enter Username</h1>}\n      </div>\n    );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}